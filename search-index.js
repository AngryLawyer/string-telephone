var searchIndex = {};
searchIndex['demo_client'] = {"items":[],"paths":[]};
searchIndex['demo_server'] = {"items":[],"paths":[]};

searchIndex['string_telephone'] = {"items":[[0,"","string_telephone","\n# String Telephone"],[0,"packet","",""],[1,"Packet","string_telephone::packet","The underlying shape for transferring data."],[11,"protocol_id","","",0],[11,"packet_type","","",0],[11,"packet_content","","Serialized user data goes in here",0],[2,"PacketType","","Headers for various different built-in message types"],[12,"PacketConnect","","",1],[12,"PacketAccept","","",1],[12,"PacketReject","","",1],[12,"PacketDisconnect","","",1],[12,"PacketMessage","","",1],[2,"TaskCommand","","Commands to send to subprocesses"],[12,"Disconnect","","",2],[10,"eq","","",1],[10,"ne","","",1],[10,"fmt","","",1],[10,"clone","","",1],[10,"from_i64","","",1],[10,"from_u64","","",1],[10,"clone","","",0],[10,"connect","","",0],[10,"disconnect","","",0],[10,"accept","","",0],[10,"reject","","",0],[10,"message","","",0],[10,"deserialize","","",0],[10,"serialize","","",0],[0,"shared","string_telephone",""],[1,"ConnectionConfig","string_telephone::shared","General configuration for a connection"],[11,"protocol_id","","A shared ID to identify whether a connection should be accepted",3],[11,"timeout_period","","How long we should wait before hanging up",3],[11,"packet_deserializer","","A function to turn raw data into our packet format",3],[11,"packet_serializer","","A function to turn a packet into raw data",3],[10,"new","","Create a new ConnectionConfig object",3],[0,"client","string_telephone",""],[1,"Client","string_telephone::client","Clientside implementation of UDP networking"],[11,"addr","","The socket we should use locally",4],[11,"target_addr","","The socket of the server we intent to connect to",4],[11,"config","","Basic configuration for connecting",4],[11,"connection_state","","What's the current state of our connection",4],[1,"ClientConnectionConfig","","Additional configuration options for a Client connection"],[11,"max_connect_retries","","How many times should we ask for a connection before giving up?",5],[11,"connect_attempt_timeout","","How long should each connection request await an answer?",5],[2,"ConnectionState","","The current state of a connection"],[12,"CommsDisconnected","","",6],[12,"CommsConnecting","","",6],[12,"CommsConnected","","",6],[2,"PollFailResult","","A Poll attempt failed for some reason"],[12,"PollEmpty","","",7],[12,"PollDisconnected","","",7],[10,"fmt","","",7],[10,"new","","Create a new ClientConnectionConfig object",5],[10,"connect","","Connect our Client to a target Server.\nWill block until either a valid connection is made, or we give up",4],[10,"poll","","Pop the last event off of our comms queue, if any",4],[10,"send","","Send a packet to the server",4],[10,"drop","","",4],[0,"server","string_telephone",""],[1,"Server","string_telephone::server",""],[11,"addr","","",8],[11,"config","","",8],[2,"PacketOrCommand","",""],[12,"UserPacket","","",9],[12,"Command","","",9],[10,"new","","",8],[10,"poll","","",8],[10,"cull","","",8],[10,"send_to","","",8],[10,"send_to_many","","",8],[10,"send_to_all","","",8],[10,"drop","","",8]],"paths":[[1,"Packet"],[2,"PacketType"],[2,"TaskCommand"],[1,"ConnectionConfig"],[1,"Client"],[1,"ClientConnectionConfig"],[2,"ConnectionState"],[2,"PollFailResult"],[1,"Server"],[2,"PacketOrCommand"]]};

initSearch(searchIndex);
